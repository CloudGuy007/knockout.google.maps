/*
*   knockout.google.maps 0.1.0 (2014-01-12)
*   Created by Manuel Guilbault (https://github.com/manuel-guilbault)
*
*   Source: https://github.com/manuel-guilbault/knockout.google.maps
*   MIT License: http://www.opensource.org/licenses/MIT
*/!function(a){"function"==typeof require&&"object"==typeof exports&&"object"==typeof module?a(require("knockout"),exports):"function"==typeof define&&define.amd?define(["knockout","exports"],a):a(ko,ko.validation={})}(function(a){function b(b,c,d){var e=b.createChildContext(d);e.removeHandlers=[],a.applyBindingsToDescendants(e,c),d.__ko_gm_removeHandlers=e.removeHandlers}function c(a){for(var b=0;b<a.__ko_gm_removeHandlers.length;++b)a.__ko_gm_removeHandlers[b](a)}function d(d,e,f,g){for(var h=a.utils.compareArrays(f,g),i=0;i<h.length;++i){var j=h[i];switch(j.status){case"added":b(d,e,j.value);break;case"deleted":c(j.value)}}}if(void 0===typeof a)throw"Knockout is required, please ensure it is loaded before loading this plugin";a.google={maps:{}},a.google.maps.utils={assignBindingToOptions:function(b,c,d,e,f){var g=a.utils.unwrapObservable(b[c]);void 0===g&&(g=e),f&&(g=f(g)),d[c]=g},tryObserveBinding:function(b,c,d){a.isObservable(b[c])&&b[c].subscribe(d)},tryRegisterMouseEvent:function(a,b,c,d,e){"function"==typeof b[c]&&google.maps.event.addListener(d,e||c,function(a){b[c](a)})}},a.bindingHandlers.infoWindow={init:function(b,c,d,e,f){if(void 0===f.$map)throw"infoWindow binding must be used only inside the scope of a map binding.";var g=a.utils.unwrapObservable(c());b=b.cloneNode(!0),a.applyBindingsToDescendants(f,b);var h={};for(var i in a.bindingHandlers.infoWindow.binders){var j=a.bindingHandlers.infoWindow.binders[i];j.onBuildOptions&&j.onBuildOptions(f,g,h,a)}h.content=b;var k=new google.maps.InfoWindow(h);for(var i in a.bindingHandlers.infoWindow.binders){var j=a.bindingHandlers.infoWindow.binders[i];j.onCreated&&j.onCreated(f,g,k,a)}return f.removeHandlers&&f.removeHandlers.push(function(b){for(var c in a.bindingHandlers.infoWindow.binders){var d=a.bindingHandlers.infoWindow.binders[c];d.onRemoved&&d.onRemoved(f,g,b,k,a)}k.isOpen&&k.close()}),{controlsDescendantBindings:!0}},binders:{visible:{onCreated:function(a,b,c,d){c.isOpen=!1,d.utils.unwrapObservable(b.visible)&&(c.open(a.map,d.utils.unwrapObservable(b.anchor)),c.isOpen=!0),d.isObservable(b.visible)&&b.visible.subscribe(function(){c.isOpen?c.close():c.open(a.$map,d.utils.unwrapObservable(b.anchor)),c.isOpen=!c.isOpen})}},disableAutoPan:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"disableAutoPan",c,!1,function(a){return!!a})},onCreated:function(a,b,c,d){d.google.maps.utils.tryObserveBinding(b,"disableAutoPan",function(a){c.setOptions({disableAutoPan:!!a})})}},maxWidth:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"maxWidth",c,0)},onCreated:function(a,b,c,d){d.google.maps.utils.tryObserveBinding(b,"maxWidth",function(a){c.setOptions({maxWidth:a})})}},pixelOffset:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"pixelOffset",c,new google.maps.Size(0,0))},onCreated:function(a,b,c,d){d.google.maps.utils.tryObserveBinding(b,"pixelOffset",function(a){c.setOptions({pixelOffset:a})})}},position:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"position",c)},onCreated:function(a,b,c,d){d.google.maps.utils.tryObserveBinding(b,"position",function(a){c.setPosition(a)})}}}},a.bindingHandlers.map={init:function(b,c,d,e,f){var g=b.cloneNode(!0),h=a.utils.unwrapObservable(c()),i={};for(var j in a.bindingHandlers.map.binders){var k=a.bindingHandlers.map.binders[j];k.onBuildOptions&&k.onBuildOptions(f,h,i,a)}var l=new google.maps.Map(b,i);for(var j in a.bindingHandlers.map.binders){var k=a.bindingHandlers.map.binders[j];k.onCreated&&k.onCreated(f,h,l,a)}var m=f.extend({$map:l});return a.applyBindingsToDescendants(m,g),{controlsDescendantBindings:!0}},binders:{center:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"center",c),d.google.maps.utils.assignBindingToOptions(b,"panCenter",c,!0,function(a){return!!a})},onCreated:function(a,b,c,d){if(d.isObservable(b.center)){var e=!1;google.maps.event.addListener(c,"center_changed",function(){e||(e=!0,b.center(c.getCenter()),e=!1)}),b.center.subscribe(function(){e||(e=!0,d.utils.unwrapObservable(b.panCenter)?c.panTo(b.center()):c.setCenter(b.center()),e=!1)})}}},zoom:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"zoom",c,8)},onCreated:function(a,b,c,d){d.isObservable(b.zoom)&&(google.maps.event.addListener(c,"zoom_changed",function(){b.zoom(c.getZoom())}),b.zoom.subscribe(function(){c.setZoom(b.zoom())}))}},mapTypeId:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"mapTypeId",c,google.maps.MapTypeId.ROADMAP)},onCreated:function(a,b,c,d){d.google.maps.utils.tryObserveBinding(b,"mapTypeId",function(a){c.setMapTypeId(a)})}},bounds:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"bounds",c),d.google.maps.utils.assignBindingToOptions(b,"panBounds",c,!0,function(a){return!!a})},onCreated:function(a,b,c,d){if(d.isObservable(b.bounds)){var e=!1;google.maps.event.addListenerOnce(c,"idle",function(){e=!0,b.bounds(c.getBounds()),e=!1}),google.maps.event.addListener(c,"bounds_changed",function(){e||(e=!0,b.bounds(c.getBounds()),e=!1)}),b.bounds.subscribe(function(){e||(e=!0,d.utils.unwrapObservable(b.bounds)?c.panToBounds(b.bounds()):c.fitBounds(b.bounds()),e=!1)})}}},backgroundColor:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"backgroundColor",c)}},draggable:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"draggable",c)},onCreated:function(a,b,c,d){d.google.maps.utils.tryObserveBinding(b,"draggable",function(a){c.setOptions({draggable:!!a})})}}}},a.bindingHandlers.mapItems={init:function(c,e,f,g,h){for(var i=e(),j=a.utils.unwrapObservable(i),k=0;k<j.length;++k)b(h,c,j[k]);return a.isObservable(i)&&(c.__ko_gm_oldItems=i().slice(0),i.subscribe(function(){var a=i();d(h,c,c.__ko_gm_oldItems,a),c.__ko_gm_oldItems=a.slice(0)})),{controlsDescendantBindings:!0}}},a.virtualElements.allowedBindings.mapItems=!0,a.bindingHandlers.marker={init:function(b,c,d,e,f){if(void 0===f.$map)throw"marker binding must be used only inside the scope of a map binding.";var g=a.utils.unwrapObservable(c()),h={};for(var i in a.bindingHandlers.marker.binders){var j=a.bindingHandlers.marker.binders[i];j.onBuildOptions&&j.onBuildOptions(f,g,h,a)}h.map=f.$map;var k=new google.maps.Marker(h);for(var i in a.bindingHandlers.marker.binders){var j=a.bindingHandlers.marker.binders[i];j.onCreated&&j.onCreated(f,g,k,a)}f.removeHandlers&&f.removeHandlers.push(function(b){for(var c in a.bindingHandlers.marker.binders){var d=a.bindingHandlers.marker.binders[c];d.onRemoved&&d.onRemoved(f,g,b,k,a)}k.setMap(null)});var l=f.extend({$marker:k});return a.applyBindingsToDescendants(l,b),{controlsDescendantBindings:!0}},binders:{animation:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"animation",c)},onCreated:function(a,b,c,d){d.google.maps.utils.tryObserveBinding(b,"animation",function(a){c.setAnimation(a)})},onRemoved:function(){}},clickable:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"clickable",c,!0,function(a){return!!a})},onCreated:function(a,b,c,d){d.google.maps.utils.tryObserveBinding(b,"clickable",function(a){c.setClickable(!!a)})}},cursor:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"cursor",c)},onCreated:function(a,b,c,d){d.google.maps.utils.tryObserveBinding(b,"cursor",function(a){c.setCursor(a)})}},icon:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"icon",c)},onCreated:function(a,b,c,d){d.google.maps.utils.tryObserveBinding(b,"icon",function(a){c.setIcon(a)})}},raiseOnDrag:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"raiseOnDrag",c,!0,function(a){return!!a})}},shadow:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"shadow",c)},onCreated:function(a,b,c,d){d.google.maps.utils.tryObserveBinding(b,"shadow",function(a){c.setShadow(a)})}},position:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"position",c)},onCreated:function(a,b,c,d){if(d.isObservable(b.position)){var e=!1;b.position.subscribe(function(){e||(e=!0,c.setPosition(b.position()),e=!1)}),b.positionUpdateOnDragEnd?google.maps.event.addListener(c,"dragend",function(){e||(e=!0,b.position(c.getPosition()),e=!1)}):google.maps.event.addListener(c,"position_changed",function(){e||(e=!0,b.position(c.getPosition()),e=!1)})}}},draggable:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"draggable",c,!1,function(a){return!!a})},onCreated:function(a,b,c,d){d.google.maps.utils.tryObserveBinding(b,"draggable",function(a){c.setDraggable(!!a)})}},flat:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"flat",c,!1,function(a){return!!a})},onCreated:function(a,b,c,d){d.google.maps.utils.tryObserveBinding(b,"flat",function(a){c.setFlat(!!a)})}},title:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"title",c,"")},onCreated:function(a,b,c,d){d.google.maps.utils.tryObserveBinding(b,"title",function(a){c.setTitle(a)})}},visible:{onBuildOptions:function(a,b,c,d){d.google.maps.utils.assignBindingToOptions(b,"visible",c,!0,function(a){return!!a})},onCreated:function(a,b,c,d){d.google.maps.utils.tryObserveBinding(b,"visible",function(a){c.setVisible(!!a)})}},click:{onCreated:function(a,b,c,d){d.google.maps.utils.tryRegisterMouseEvent(a,b,"click",c)}},doubleclick:{onCreated:function(a,b,c,d){d.google.maps.utils.tryRegisterMouseEvent(a,b,"dblclick",c)}},rightclick:{onCreated:function(a,b,c,d){d.google.maps.utils.tryRegisterMouseEvent(a,b,"rightclick",c)}},mousedown:{onCreated:function(a,b,c,d){d.google.maps.utils.tryRegisterMouseEvent(a,b,"mousedown",c)}},mouseout:{onCreated:function(a,b,c,d){d.google.maps.utils.tryRegisterMouseEvent(a,b,"mouseout",c)}},mouseover:{onCreated:function(a,b,c,d){d.google.maps.utils.tryRegisterMouseEvent(a,b,"mouseover",c)}},mouseup:{onCreated:function(a,b,c,d){d.google.maps.utils.tryRegisterMouseEvent(a,b,"mouseup",c)}}}},a.virtualElements.allowedBindings.marker=!0});